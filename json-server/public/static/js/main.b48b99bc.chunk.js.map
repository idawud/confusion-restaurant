{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/DishdetailComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","href","height","width","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","Footer","RenderDish","in","transformProps","exitTransform","CardBody","CardText","description","RenderCommentItem","comment","author","dayjs","date","format","RenderComments","comments","postComment","dishId","required","val","length","maxLength","len","CommentForm","handleSubmit","values","rating","Row","Col","select","model","validators","show","messages","text","placeholder","minLength","textarea","rows","Dishdetail","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","md","size","offset","checkbox","RenderLeader","Media","left","object","right","body","heading","About","leaders","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","find","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","filter","commentsErrMess","withRouter","connect","dispatch","newComment","Date","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b48b99bc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst  RenderMenuItem = ({ dish }) => {\r\n\treturn (\r\n\t\t<Card > \r\n\t\t\t<Link to={`/menu/${dish.id}`} >\r\n\t\t\t\t<CardImg src={baseUrl + dish.image} alt={dish.name} />\r\n\t\t\t\t<CardImgOverlay>\r\n\t\t\t\t\t<CardTitle >{dish.name}</CardTitle>\t\t\r\n\t\t\t\t</CardImgOverlay>\r\n\t\t\t</Link>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nfunction Menu(props) {   \r\n\tconst menu = props.dishes.dishes.map((dish) => {\r\n\t\treturn (\r\n\t\t  <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n\t\t\t<RenderMenuItem dish={dish} />\r\n\t\t  </div>\r\n\t\t);\r\n\t});\r\n\tif (props.dishes.isLoading) {\r\n\t\treturn(\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">            \r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\telse if (props.dishes.errMess) {\r\n\t\treturn(\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<h4>{props.dishes.errMess}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\telse{\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<Breadcrumb>\r\n\t\t\t\t\t\t<BreadcrumbItem><Link to='/home' >Home </Link></BreadcrumbItem>\r\n\t\t\t\t\t\t<BreadcrumbItem active>Menu</BreadcrumbItem>\r\n\t\t\t\t\t</Breadcrumb>\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<h3>Menu</h3>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\"> \r\n\t\t\t\t\t{menu} \r\n\t\t\t\t</div>  \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n     \r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport * as dayjs from 'dayjs';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle,  Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish({dish}){ \r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle >{dish.name}</CardTitle>\t\r\n                            <CardText >{dish.description}</CardText>\t\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n        </div> \r\n    );\r\n}\r\n\r\nfunction RenderCommentItem({comment}){ \r\n    return (\r\n        <div>\r\n            <p>{comment.comment}</p>\r\n            <p>-- {comment.author}, { dayjs(comment.date).format('MMM DD,YYYY')} </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}){ \r\n    if ( comments != null){\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\"> \r\n                    <Stagger in>\r\n                        {\r\n                            comments.map( comment => {\r\n                                return (\r\n                                    <Fade in>\r\n                                        <li key={comment.id}> \r\n                                            <RenderCommentItem comment={comment} />\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Stagger> \r\n                </ul>\r\n                <CommentForm postComment={postComment} dishId={dishId}/>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values){\r\n        this.props.postComment(this.props.dishId, values.rating, values.name, values.comment);\r\n\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span>Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col> \r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required\r\n                                    }}\r\n                                    >\r\n                                        <option></option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".rating\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col> \r\n                                    <Label htmlFor=\"name\">Your Name</Label>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                            />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Dishdetail(props){\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)  { \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu' >Menu </Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"> \r\n                    <RenderDish dish={props.dish} />  \r\n                    <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id}/> \r\n                </div>\r\n            </div>  \r\n        );\r\n    }\r\n    else{\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\nexport default Dishdetail;","import React from 'react';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                        <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) { \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row  } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n \r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values)); \r\n        this.props.postFeedback(values.firstname, values.lastname , values.telnum , values.email , values.agree , values.contactType , values.message);\r\n        //  event.preventDefault();\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home' >Home </Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <button className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</button>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\"> \r\n                    <Form model=\"feedback\" onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} \r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Stagger, Fade  } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}){\r\n    return ( \r\n            <Media className=\"container\">\r\n                <Media left href=\"#\">\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media right body className=\"container\">\r\n                    <Media heading>\r\n                        {leader.name}\r\n                    </Media>\r\n                    {leader.designation}\r\n                    <Media className=\"leader-description\">\r\n                         {leader.description}\r\n                    </Media>\r\n                </Media>\r\n               \r\n            </Media> \r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n                <RenderLeader leader={leader} />\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {leaders}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { actions } from 'react-redux-form';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n// thunk\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\n// dispatcher\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message); \r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)) )\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n \r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => { \r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => {\r\n    console.log('post feedbacks ', response); \r\n    dispatch(actions.reset('feedback'));\r\n    alert('Thank you for your feedbacks!\\n' + JSON.stringify(response));\r\n  })\r\n  .catch(error =>  { console.log('post feedbacks', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent'; \r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'; \r\nimport { postComment, postFeedback , fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes())},\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()), \r\n  });\r\n\r\nclass Main extends Component { \r\n   \r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n    \r\n    render(){\r\n        const HomePage = () => {\r\n            return(\r\n                <Home \r\n                    dish={this.props.dishes.dishes.find((dish) => dish.featured)}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.find((promo) => promo.featured)}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.find((leader) => leader.featured)}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n          />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({match}) => { \r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.find((dish) => dish.id === parseInt(match.params.dishId,10))}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                    <Switch location={this.props.location}>\r\n                        <Route path='/home' component={HomePage} />\r\n                        <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders} />} />\r\n                        <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                        <Route path='/menu/:dishId' component={DishWithId} />\r\n                        <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback} />} />\r\n                        <Redirect to=\"/home\" />\r\n                    </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\t\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { \r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        comment.id = state.comments.length;\r\n        comment.date = new Date().toISOString();\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true, errMess: null, leaders:[] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n            \r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React from 'react'; \nimport './App.css'; \nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nfunction App() { \n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<div className=\"App\"> \n\t\t\t\t\t<Main />\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form'; \r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}